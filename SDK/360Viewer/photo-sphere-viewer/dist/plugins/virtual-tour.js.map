{"version":3,"file":"virtual-tour.js","sources":["../../src/plugins/virtual-tour/AbstractDatasource.js","../../src/plugins/virtual-tour/utils.js","../../src/plugins/virtual-tour/ClientSideDatasource.js","../../src/plugins/virtual-tour/constants.js","../../src/plugins/virtual-tour/NodesListButton.js","../../src/plugins/virtual-tour/ServerSideDatasource.js","../../src/plugins/virtual-tour/index.js"],"sourcesContent":["import { PSVError } from 'photo-sphere-viewer';\n\n/**\n * @memberOf PSV.plugins.VirtualTourPlugin\n * @private\n */\nexport class AbstractDatasource {\n\n  /**\n   * @type {Record<string, PSV.plugins.VirtualTourPlugin.Node>}\n   */\n  nodes = {};\n\n  /**\n   * @param {PSV.plugins.VirtualTourPlugin} plugin\n   */\n  constructor(plugin) {\n    this.plugin = plugin;\n  }\n\n  destroy() {\n    delete this.plugin;\n  }\n\n  /**\n   * @summary Loads a node\n   * @param {string} nodeId\n   * @return {Promise<PSV.plugins.VirtualTourPlugin.Node>}\n   */\n  loadNode(nodeId) { // eslint-disable-line no-unused-vars\n    throw new PSVError('loadNode not implemented');\n  }\n\n  /**\n   * @summary Loades nodes linked to another node\n   * @param {string} nodeId\n   * @return {Promise<void>}\n   */\n  loadLinkedNodes(nodeId) { // eslint-disable-line no-unused-vars\n    throw new PSVError('loadLinkedNodes not implemented');\n  }\n\n}\n","import { PSVError, utils } from 'photo-sphere-viewer';\n\n/**\n * @summary Checks the configuration of a node\n * @param {PSV.plugins.VirtualTourPlugin.Node} node\n * @param {boolean} isGps\n * @private\n */\nexport function checkNode(node, isGps) {\n  if (!node.id) {\n    throw new PSVError('No id given for node');\n  }\n  if (!node.panorama) {\n    throw new PSVError(`No panorama provided for node ${node.id}`);\n  }\n  if (isGps && !(node.position?.length >= 2)) {\n    throw new PSVError(`No position provided for node ${node.id}`);\n  }\n}\n\n/**\n * @summary Checks the configuration of a link\n * @param {PSV.plugins.VirtualTourPlugin.Node} node\n * @param {PSV.plugins.VirtualTourPlugin.NodeLink} link\n * @param {boolean} isGps\n * @private\n */\nexport function checkLink(node, link, isGps) {\n  if (!link.nodeId) {\n    throw new PSVError(`Link of node ${node.id} has no target id`);\n  }\n  if (!isGps && !utils.isExtendedPosition(link)) {\n    throw new PSVError(`No position provided for link ${link.nodeId} of node ${node.id}`);\n  }\n}\n\n/**\n * @summary Changes the color of a mesh\n * @param {external:THREE.Mesh} mesh\n * @param {*} color\n * @private\n */\nexport function setMeshColor(mesh, color) {\n  mesh.material.color.set(color);\n}\n\n/**\n * @summary Returns the distance between two GPS points\n * @param {number[]} p1\n * @param {number[]} p2\n * @return {number}\n * @private\n */\nexport function distance(p1, p2) {\n  return utils.greatArcDistance(p1, p2) * 6371e3;\n}\n\n/**\n * @summary Returns the bearing between two GPS points\n * {@link http://www.movable-type.co.uk/scripts/latlong.html}\n * @param {number[]} p1\n * @param {number[]} p2\n * @return {number}\n * @private\n */\nexport function bearing(p1, p2) {\n  const [λ1, φ1] = p1;\n  const [λ2, φ2] = p2;\n\n  const y = Math.sin(λ2 - λ1) * Math.cos(φ2);\n  const x = Math.cos(φ1) * Math.sin(φ2) - Math.sin(φ1) * Math.cos(φ2) * Math.cos(λ2 - λ1);\n  return Math.atan2(y, x);\n}\n","import { PSVError, utils } from 'photo-sphere-viewer';\nimport { AbstractDatasource } from './AbstractDatasource';\nimport { checkLink, checkNode } from './utils';\n\n/**\n * @memberOf PSV.plugins.VirtualTourPlugin\n * @private\n */\nexport class ClientSideDatasource extends AbstractDatasource {\n\n  loadNode(nodeId) {\n    if (this.nodes[nodeId]) {\n      return Promise.resolve(this.nodes[nodeId]);\n    }\n    else {\n      return Promise.reject(new PSVError(`Node ${nodeId} not found`));\n    }\n  }\n\n  loadLinkedNodes(nodeId) {\n    if (!this.nodes[nodeId]) {\n      return Promise.reject(new PSVError(`Node ${nodeId} not found`));\n    }\n    else {\n      return Promise.resolve();\n    }\n  }\n\n  setNodes(rawNodes) {\n    if (!rawNodes?.length) {\n      throw new PSVError('No nodes provided');\n    }\n\n    const nodes = {};\n    const linkedNodes = {};\n\n    rawNodes.forEach((node) => {\n      checkNode(node, this.plugin.isGps());\n\n      if (nodes[node.id]) {\n        throw new PSVError(`Duplicate node ${node.id}`);\n      }\n      if (!node.links) {\n        utils.logWarn(`Node ${node.id} has no links`);\n        nodes.links = [];\n      }\n\n      nodes[node.id] = node;\n    });\n\n    rawNodes.forEach((node) => {\n      node.links.forEach((link) => {\n        checkLink(node, link, this.plugin.isGps());\n\n        if (!nodes[link.nodeId]) {\n          throw new PSVError(`Target node ${link.nodeId} of node ${node.id} does not exists`);\n        }\n\n        // copy essential data\n        link.position = link.position || nodes[link.nodeId].position;\n        link.name = link.name || nodes[link.nodeId].name;\n\n        linkedNodes[link.nodeId] = true;\n      });\n    });\n\n    rawNodes.forEach((node) => {\n      if (!linkedNodes[node.id]) {\n        utils.logWarn(`Node ${node.id} is never linked to`);\n      }\n    });\n\n    this.nodes = nodes;\n  }\n\n}\n","import * as THREE from 'three';\nimport arrowGeometryJson from './arrow.json';\nimport arrowIconSvg from './arrow.svg';\nimport arrowOutlineGeometryJson from './arrow_outline.json';\nimport nodesList from './nodes-list.svg';\n\n/**\n * @summary In client mode all the nodes are provided in the config or with the `setNodes` method\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_CLIENT = 'client';\n\n/**\n * @summary In server mode the nodes are fetched asynchronously\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_SERVER = 'server';\n\n/**\n * @summary In manual mode each link is positionned manually on the panorama\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_MANUAL = 'manual';\n\n/**\n * @summary In GPS mode each node is globally positionned and the links are automatically computed\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_GPS = 'gps';\n\n/**\n * @summaru In markers mode the links are represented using markers\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_MARKERS = 'markers';\n\n/**\n * @summaru In 3D mode the links are represented using 3d arrows\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_3D = '3d';\n\n/**\n * @summary Available events\n * @enum {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const EVENTS = {\n  /**\n   * @event node-changed\n   * @memberof PSV.plugins.VirtualTourPlugin\n   * @summary Triggered when the current node changes\n   * @param {string} nodeId\n   */\n  NODE_CHANGED     : 'node-changed',\n  /**\n   * @event filter:render-nodes-list\n   * @memberof PSV.plugins.VirtualTourPlugin\n   * @summary Used to alter the list of nodes displayed on the side-panel\n   * @param {PSV.plugins.VirtualTourPlugin.Node[]} nodes\n   * @returns {PSV.plugins.VirtualTourPlugin.Node[]}\n   */\n  RENDER_NODES_LIST: 'render-nodes-list',\n};\n\n/**\n * @summary Property name added to markers\n * @type {string}\n * @constant\n * @private\n */\nexport const LINK_DATA = 'tourLink';\n\n/**\n * @summary Default style of the link marker\n * @type {PSV.plugins.MarkersPlugin.Properties}\n * @constant\n * @private\n */\nexport const DEFAULT_MARKER = {\n  html     : arrowIconSvg,\n  width    : 80,\n  height   : 80,\n  scale    : [0.5, 2],\n  anchor   : 'top center',\n  className: 'psv-virtual-tour__marker',\n  style    : {\n    color: 'rgba(0, 208, 255, 0.8)',\n  },\n};\n\n/**\n * @summary Default style of the link arrow\n * @type {PSV.plugins.VirtualTourPlugin.ArrowStyle}\n * @constant\n * @private\n */\nexport const DEFAULT_ARROW = {\n  color       : 0xaaaaaa,\n  hoverColor  : 0xaa5500,\n  outlineColor: 0x000000,\n  scale       : [0.5, 2],\n};\n\n/**\n * @type {external:THREE.BufferedGeometry}\n * @constant\n * @private\n */\nexport const { ARROW_GEOM, ARROW_OUTLINE_GEOM } = (() => {\n  const loader = new THREE.ObjectLoader();\n  const geometries = loader.parseGeometries([arrowGeometryJson, arrowOutlineGeometryJson]);\n  const arrow = geometries[arrowGeometryJson.uuid];\n  const arrowOutline = geometries[arrowOutlineGeometryJson.uuid];\n  const scale = 0.015;\n  const rot = Math.PI / 2;\n  arrow.scale(scale, scale, scale);\n  arrow.rotateX(rot);\n  arrowOutline.scale(scale, scale, scale);\n  arrowOutline.rotateX(rot);\n  return { ARROW_GEOM: arrow, ARROW_OUTLINE_GEOM: arrowOutline };\n})();\n\n/**\n * @summary Panel identifier for nodes list\n * @type {string}\n * @constant\n * @private\n */\nexport const ID_PANEL_NODES_LIST = 'virtualTourNodesList';\n\n/**\n * @summary Nodes list template\n * @param {PSV.plugins.VirtualTourPlugin.Node[]} nodes\n * @param {string} title\n * @param {string} currentNodeId\n * @returns {string}\n * @constant\n * @private\n */\nexport const NODES_LIST_TEMPLATE = (nodes, title, currentNodeId) => `\n<div class=\"psv-panel-menu psv-panel-menu--stripped psv-virtual-tour__menu\">\n  <h1 class=\"psv-panel-menu-title\">${nodesList} ${title}</h1>\n  <ul class=\"psv-panel-menu-list\">\n    ${nodes.map(node => `\n    <li data-node-id=\"${node.id}\" tabindex=\"0\"\n        class=\"psv-panel-menu-item ${currentNodeId === node.id ? 'psv-panel-menu-item--active' : ''}\">\n      ${node.thumbnail ? `<span class=\"psv-panel-menu-item-icon\"><img src=\"${node.thumbnail}\"/></span>` : ''}\n      <span class=\"psv-panel-menu-item-label\">${node.caption || node.name}</span>\n    </li>\n    `).join('')}\n  </ul>\n</div>\n`;\n","import { AbstractButton, CONSTANTS } from '../..';\nimport { ID_PANEL_NODES_LIST } from './constants';\nimport nodesList from './nodes-list.svg';\n\n/**\n * @summary Navigation bar markers list button class\n * @extends PSV.buttons.AbstractButton\n * @memberof PSV.buttons\n */\nexport class NodesListButton extends AbstractButton {\n\n  static id = 'nodesList';\n  static icon = nodesList;\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   */\n  constructor(navbar) {\n    super(navbar, 'psv-button--hover-scale psv-nodes-list-button', true);\n\n    /**\n     * @type {PSV.plugins.VirtualTourPlugin}\n     */\n    this.plugin = this.psv.getPlugin('virtual-tour');\n\n    if (this.plugin) {\n      this.psv.on(CONSTANTS.EVENTS.OPEN_PANEL, this);\n      this.psv.on(CONSTANTS.EVENTS.CLOSE_PANEL, this);\n    }\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    this.psv.off(CONSTANTS.EVENTS.OPEN_PANEL, this);\n    this.psv.off(CONSTANTS.EVENTS.CLOSE_PANEL, this);\n\n    super.destroy();\n  }\n\n  /**\n   * @override\n   */\n  isSupported() {\n    return !!this.plugin && !this.plugin.isServerSide();\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      // @formatter:off\n      case CONSTANTS.EVENTS.OPEN_PANEL:  this.toggleActive(e.args[0] === ID_PANEL_NODES_LIST); break;\n      case CONSTANTS.EVENTS.CLOSE_PANEL: this.toggleActive(false); break;\n      // @formatter:on\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @override\n   * @description Toggles nodes list\n   */\n  onClick() {\n    this.plugin.toggleNodesList();\n  }\n\n}\n","import { PSVError, utils } from 'photo-sphere-viewer';\nimport { AbstractDatasource } from './AbstractDatasource';\nimport { checkLink, checkNode } from './utils';\n\n/**\n * @memberOf PSV.plugins.VirtualTourPlugin\n * @private\n */\nexport class ServerSideDatasource extends AbstractDatasource {\n\n  constructor(plugin) {\n    super(plugin);\n\n    if (!plugin.config.getNode) {\n      throw new PSVError('Missing getNode() option.');\n    }\n\n    this.nodeResolver = plugin.config.getNode;\n    this.linksResolver = plugin.config.getLinks;\n  }\n\n  loadNode(nodeId) {\n    if (this.nodes[nodeId]) {\n      return Promise.resolve(this.nodes[nodeId]);\n    }\n    else {\n      return Promise.resolve(this.nodeResolver(nodeId))\n        .then((node) => {\n          checkNode(node, this.plugin.isGps());\n          this.nodes[nodeId] = node;\n          return node;\n        });\n    }\n  }\n\n  loadLinkedNodes(nodeId) {\n    if (!this.nodes[nodeId]) {\n      return Promise.reject(new PSVError(`Node ${nodeId} not found`));\n    }\n    else if (this.nodes[nodeId].links) {\n      return Promise.resolve();\n    }\n    else {\n      if (!this.linksResolver) {\n        this.nodes[nodeId].links = [];\n        return Promise.resolve();\n      }\n\n      utils.logWarn(`getLinks() option is deprecated, instead make getNode() also return the node' links.`);\n\n      return Promise.resolve(this.linksResolver(nodeId))\n        .then(links => links || [])\n        .then((links) => {\n          const node = this.nodes[nodeId];\n\n          links.forEach((link) => {\n            checkLink(node, link, this.plugin.isGps());\n\n            // copy essential data\n            if (this.nodes[link.nodeId]) {\n              link.position = link.position || this.nodes[link.nodeId].position;\n              link.name = link.name || this.nodes[link.nodeId].name;\n            }\n\n            if (this.plugin.isGps() && !link.position) {\n              throw new PSVError(`No GPS position provided for link ${link.nodeId} of node ${node.id}`);\n            }\n          });\n\n          // store links\n          node.links = links;\n        });\n    }\n  }\n\n}\n","import * as THREE from 'three';\nimport { AbstractPlugin, CONSTANTS, DEFAULTS, PSVError, registerButton, utils } from '../..';\nimport { ClientSideDatasource } from './ClientSideDatasource';\nimport {\n  ARROW_GEOM,\n  ARROW_OUTLINE_GEOM,\n  DEFAULT_ARROW,\n  DEFAULT_MARKER,\n  EVENTS,\n  ID_PANEL_NODES_LIST,\n  LINK_DATA,\n  MODE_3D,\n  MODE_CLIENT,\n  MODE_GPS,\n  MODE_MANUAL,\n  MODE_MARKERS,\n  MODE_SERVER,\n  NODES_LIST_TEMPLATE\n} from './constants';\nimport { NodesListButton } from './NodesListButton';\nimport { ServerSideDatasource } from './ServerSideDatasource';\nimport './style.scss';\nimport { bearing, distance, setMeshColor } from './utils';\n\n\n/**\n * @callback GetNode\n * @summary Function to load a node\n * @memberOf PSV.plugins.VirtualTourPlugin\n * @param {string} nodeId\n * @returns {PSV.plugins.VirtualTourPlugin.Node|Promise<PSV.plugins.VirtualTourPlugin.Node>}\n */\n\n/**\n * @callback GetLinks\n * @summary Function to load the links of a node\n * @deprecated `getNode` must directly return the links of each node\n * @memberOf PSV.plugins.VirtualTourPlugin\n * @param {string} nodeId\n * @returns {PSV.plugins.VirtualTourPlugin.NodeLink[]|Promise<PSV.plugins.VirtualTourPlugin.NodeLink[]>}\n */\n\n/**\n * @callback Preload\n * @summary Function to determine if a link must be preloaded\n * @memberOf PSV.plugins.VirtualTourPlugin\n * @param {PSV.plugins.VirtualTourPlugin.Node} node\n * @param {PSV.plugins.VirtualTourPlugin.NodeLink} link\n * @returns {boolean}\n */\n\n/**\n * @typedef {Object} PSV.plugins.VirtualTourPlugin.Node\n * @summary Definition of a single node in the tour\n * @property {string} id - unique identifier of the node\n * @property {*} panorama\n * @property {PSV.plugins.VirtualTourPlugin.NodeLink[]} [links] - links to other nodes\n * @property {number[]} [position] - GPS position (longitude, latitude, optional altitude)\n * @property {PSV.PanoData | PSV.PanoDataProvider} [panoData] - data used for this panorama\n * @property {PSV.SphereCorrection} [sphereCorrection] - sphere correction to apply to this panorama\n * @property {string} [name] - short name of the node\n * @property {string} [caption] - caption visible in the navbar\n * @property {string} [description] - description visible in the side panel\n * @property {string} [thumbnail] - thumbnail for the nodes list in the side panel\n * @property {PSV.plugins.MarkersPlugin.Properties[]} [markers] - additional markers to use on this node\n */\n\n/**\n * @typedef {PSV.ExtendedPosition} PSV.plugins.VirtualTourPlugin.NodeLink\n * @summary Definition of a link between two nodes\n * @property {string} nodeId - identifier of the target node\n * @property {string} [name] - override the name of the node (tooltip)\n * @property {number[]} [position] - override the GPS position of the node\n * @property {PSV.plugins.MarkersPlugin.Properties} [markerStyle] - override global marker style\n * @property {PSV.plugins.VirtualTourPlugin.ArrowStyle} [arrowStyle] - override global arrow style\n */\n\n/**\n * @typedef {Object} PSV.plugins.VirtualTourPlugin.ArrowStyle\n * @summary Style of the arrow in 3D mode\n * @property {string} [color=0xaaaaaa]\n * @property {string} [hoverColor=0xaa5500]\n * @property {number} [outlineColor=0x000000]\n * @property {number[]} [scale=[0.5,2]]\n */\n\n/**\n * @typedef {Object} PSV.plugins.VirtualTourPlugin.Options\n * @property {'client'|'server'} [dataMode='client'] - configure data mode\n * @property {'manual'|'gps'} [positionMode='manual'] - configure positioning mode\n * @property {'markers'|'3d'} [renderMode='3d'] - configure rendering mode of links\n * @property {PSV.plugins.VirtualTourPlugin.Node[]} [nodes] - initial nodes\n * @property {PSV.plugins.VirtualTourPlugin.GetNode} [getNode]\n * @property {PSV.plugins.VirtualTourPlugin.GetLinks} [getLinks] - Deprecated: `getNode` must directly return the links of each node\n * @property {string} [startNodeId] - id of the initial node, if not defined the first node will be used\n * @property {boolean|PSV.plugins.VirtualTourPlugin.Preload} [preload=false] - preload linked panoramas\n * @property {boolean|string|number} [rotateSpeed='20rpm'] - speed of rotation when clicking on a link, if 'false' the viewer won't rotate at all\n * @property {boolean|number} [transition=1500] - duration of the transition between nodes\n * @property {boolean} [linksOnCompass] - if the Compass plugin is enabled, displays the links on the compass, defaults to `true` on in markers render mode\n * @property {PSV.plugins.MarkersPlugin.Properties} [markerStyle] - global marker style\n * @property {PSV.plugins.VirtualTourPlugin.ArrowStyle} [arrowStyle] - global arrow style\n * @property {number} [markerLatOffset=-0.1] - (GPS & Markers mode) latitude offset applied to link markers, to compensate for viewer height\n * @property {'top'|'bottom'} [arrowPosition='bottom'] - (3D mode) arrows vertical position\n */\n\n/**\n * @typedef {Object} PSV.plugins.VirtualTourPlugin.NodeChangedData\n * @summary Data associated to the \"node-changed\" event\n * @type {PSV.plugins.VirtualTourPlugin.Node} [fromNode] - The previous node\n * @type {PSV.plugins.VirtualTourPlugin.NodeLink} [fromLink] - The link that was clicked in the previous node\n * @type {PSV.Position} [fromLinkPosition] - The position of the link on the previous node\n */\n\n// add markers buttons\nDEFAULTS.lang[NodesListButton.id] = 'Locations';\nregisterButton(NodesListButton, 'caption:left');\n\n\nexport { EVENTS, MODE_3D, MODE_CLIENT, MODE_GPS, MODE_MANUAL, MODE_MARKERS, MODE_SERVER } from './constants';\n\n\n/**\n * @summary Create virtual tours by linking multiple panoramas\n * @extends PSV.plugins.AbstractPlugin\n * @memberof PSV.plugins\n */\nexport class VirtualTourPlugin extends AbstractPlugin {\n\n  static id = 'virtual-tour';\n\n  static EVENTS = EVENTS;\n  static MODE_CLIENT = MODE_CLIENT;\n  static MODE_SERVER = MODE_SERVER;\n  static MODE_3D = MODE_3D;\n  static MODE_MARKERS = MODE_MARKERS;\n  static MODE_MANUAL = MODE_MANUAL;\n  static MODE_GPS = MODE_GPS;\n\n  /**\n   * @param {PSV.Viewer} psv\n   * @param {PSV.plugins.VirtualTourPlugin.Options} [options]\n   */\n  constructor(psv, options) {\n    super(psv);\n\n    /**\n     * @member {Object}\n     * @property {PSV.plugins.VirtualTourPlugin.Node} currentNode\n     * @property {PSV.Tooltip} currentTooltip\n     * @property {string} loadingNode\n     * @property {function} stopObserver\n     * @private\n     */\n    this.prop = {\n      currentNode   : null,\n      currentTooltip: null,\n      loadingNode   : null,\n      stopObserver  : null,\n    };\n\n    /**\n     * @type {Record<string, boolean | Promise>}\n     * @private\n     */\n    this.preload = {};\n\n    /**\n     * @member {PSV.plugins.VirtualTourPlugin.Options}\n     * @private\n     */\n    this.config = {\n      dataMode       : MODE_CLIENT,\n      positionMode   : MODE_MANUAL,\n      renderMode     : MODE_3D,\n      preload        : false,\n      rotateSpeed    : '20rpm',\n      transition     : CONSTANTS.DEFAULT_TRANSITION,\n      markerLatOffset: -0.1,\n      arrowPosition  : 'bottom',\n      linksOnCompass : options?.renderMode === MODE_MARKERS,\n      ...options,\n      markerStyle    : {\n        ...DEFAULT_MARKER,\n        ...options?.markerStyle,\n      },\n      arrowStyle     : {\n        ...DEFAULT_ARROW,\n        ...options?.arrowStyle,\n      },\n    };\n\n    if (options?.listButton === false) {\n      utils.logWarn('VirtualTourPlugin: listButton option is deprecated. '\n        + 'Please define the global navbar options according to your needs.');\n    }\n    if (options?.listButton === true && this.config.dataMode === MODE_SERVER) {\n      utils.logWarn('VirtualTourPlugin: the list button is not supported in server mode.');\n    }\n\n    /**\n     * @type {PSV.plugins.MarkersPlugin}\n     * @private\n     */\n    this.markers = null;\n\n    /**\n     * @type {PSV.plugins.CompassPlugin}\n     * @private\n     */\n    this.compass = null;\n\n    /**\n     * @type {PSV.plugins.VirtualTourPlugin.AbstractDatasource}\n     */\n    this.datasource = null;\n\n    /**\n     * @type {external:THREE.Group}\n     * @private\n     */\n    this.arrowsGroup = null;\n\n    if (this.is3D()) {\n      this.arrowsGroup = new THREE.Group();\n\n      const localLight = new THREE.PointLight(0xffffff, 1, 0);\n      localLight.position.set(0, this.config.arrowPosition === 'bottom' ? 2 : -2, 0);\n      this.arrowsGroup.add(localLight);\n    }\n  }\n\n  /**\n   * @package\n   */\n  init() {\n    super.init();\n\n    this.markers = this.psv.getPlugin('markers');\n    this.compass = this.psv.getPlugin('compass');\n\n    if (!this.is3D() && !this.markers) {\n      throw new PSVError('Tour plugin requires the Markers plugin in markers mode');\n    }\n\n    this.datasource = this.isServerSide() ? new ServerSideDatasource(this) : new ClientSideDatasource(this);\n\n    if (this.is3D()) {\n      this.psv.once(CONSTANTS.EVENTS.READY, () => {\n        this.__positionArrows();\n        this.psv.renderer.scene.add(this.arrowsGroup);\n\n        const ambientLight = new THREE.AmbientLight(0xffffff, 1);\n        this.psv.renderer.scene.add(ambientLight);\n\n        this.psv.needsUpdate();\n      });\n\n      this.psv.on(CONSTANTS.EVENTS.POSITION_UPDATED, this);\n      this.psv.on(CONSTANTS.EVENTS.ZOOM_UPDATED, this);\n      this.psv.on(CONSTANTS.EVENTS.CLICK, this);\n      this.prop.stopObserver = this.psv.observeObjects(LINK_DATA, this);\n    }\n    else {\n      this.markers.on('select-marker', this);\n    }\n\n    if (this.isServerSide()) {\n      if (this.config.startNodeId) {\n        this.setCurrentNode(this.config.startNodeId);\n      }\n    }\n    else if (this.config.nodes) {\n      this.setNodes(this.config.nodes, this.config.startNodeId);\n      delete this.config.nodes;\n    }\n  }\n\n  /**\n   * @package\n   */\n  destroy() {\n    if (this.markers) {\n      this.markers.off('select-marker', this);\n    }\n    if (this.arrowsGroup) {\n      this.psv.renderer.scene.remove(this.arrowsGroup);\n    }\n\n    this.psv.off(CONSTANTS.EVENTS.POSITION_UPDATED, this);\n    this.psv.off(CONSTANTS.EVENTS.ZOOM_UPDATED, this);\n    this.psv.off(CONSTANTS.EVENTS.CLICK, this);\n    this.prop.stopObserver?.();\n\n    this.datasource.destroy();\n\n    delete this.preload;\n    delete this.datasource;\n    delete this.markers;\n    delete this.compass;\n    delete this.arrowsGroup;\n\n    super.destroy();\n  }\n\n  handleEvent(e) {\n    let link;\n    switch (e.type) {\n      case 'select-marker':\n        link = e.args[0].data?.[LINK_DATA];\n        if (link) {\n          this.setCurrentNode(link.nodeId, link);\n        }\n        break;\n\n      case CONSTANTS.EVENTS.POSITION_UPDATED:\n      case CONSTANTS.EVENTS.ZOOM_UPDATED:\n        if (this.arrowsGroup) {\n          this.__positionArrows();\n        }\n        break;\n\n      case CONSTANTS.EVENTS.CLICK:\n        link = e.args[0].objects.find(o => o.userData[LINK_DATA])?.userData[LINK_DATA];\n        if (link) {\n          this.setCurrentNode(link.nodeId, link);\n        }\n        break;\n\n      case CONSTANTS.OBJECT_EVENTS.ENTER_OBJECT:\n        this.__onEnterObject(e.detail.object, e.detail.viewerPoint);\n        break;\n      case CONSTANTS.OBJECT_EVENTS.HOVER_OBJECT:\n        this.__onHoverObject(e.detail.object, e.detail.viewerPoint);\n        break;\n      case CONSTANTS.OBJECT_EVENTS.LEAVE_OBJECT:\n        this.__onLeaveObject(e.detail.object);\n        break;\n\n      default:\n    }\n  }\n\n  /**\n   * @summary Tests if running in server mode\n   * @return {boolean}\n   */\n  isServerSide() {\n    return this.config.dataMode === MODE_SERVER;\n  }\n\n  /**\n   * @summary Tests if running in GPS mode\n   * @return {boolean}\n   */\n  isGps() {\n    return this.config.positionMode === MODE_GPS;\n  }\n\n  /**\n   * @summary Tests if running in 3D mode\n   * @return {boolean}\n   */\n  is3D() {\n    return this.config.renderMode === MODE_3D;\n  }\n\n  /**\n   * @summary Sets the nodes (client mode only)\n   * @param {PSV.plugins.VirtualTourPlugin.Node[]} nodes\n   * @param {string} [startNodeId]\n   * @throws {PSV.PSVError} when the configuration is incorrect\n   */\n  setNodes(nodes, startNodeId) {\n    if (this.isServerSide()) {\n      throw new PSVError('Cannot set nodes in server side mode');\n    }\n\n    this.datasource.setNodes(nodes);\n\n    if (!startNodeId) {\n      startNodeId = nodes[0].id;\n    }\n    else if (!this.datasource.nodes[startNodeId]) {\n      startNodeId = nodes[0].id;\n      utils.logWarn(`startNodeId not found is provided nodes, resetted to ${startNodeId}`);\n    }\n\n    this.setCurrentNode(startNodeId);\n  }\n\n  /**\n   * @summary Changes the current node\n   * @param {string} nodeId\n   * @param {PSV.plugins.VirtualTourPlugin.NodeLink} [fromLink]\n   * @returns {Promise<boolean>} resolves false if the loading was aborted by another call\n   */\n  setCurrentNode(nodeId, fromLink = null) {\n    if (nodeId === this.prop.currentNode?.id) {\n      return Promise.resolve(true);\n    }\n\n    this.psv.hideError();\n\n    this.prop.loadingNode = nodeId;\n\n    const fromNode = this.prop.currentNode;\n    const fromLinkPosition = fromNode && fromLink ? this.__getLinkPosition(fromNode, fromLink) : null;\n\n    return Promise.all([\n      // if this node is already preloading, wait for it\n      Promise.resolve(this.preload[nodeId])\n        .then(() => {\n          if (this.prop.loadingNode !== nodeId) {\n            throw utils.getAbortError();\n          }\n\n          return this.datasource.loadNode(nodeId);\n        }),\n      Promise.resolve(fromLinkPosition ? this.config.rotateSpeed : false)\n        .then((speed) => { // eslint-disable-line consistent-return\n          if (speed) {\n            return this.psv.animate({ ...fromLinkPosition, speed });\n          }\n        })\n        .then(() => {\n          this.psv.loader.show();\n        }),\n    ])\n      .then(([node]) => {\n        if (this.prop.loadingNode !== nodeId) {\n          throw utils.getAbortError();\n        }\n\n        this.prop.currentNode = node;\n\n        if (this.prop.currentTooltip) {\n          this.prop.currentTooltip.hide();\n          this.prop.currentTooltip = null;\n        }\n\n        if (this.is3D()) {\n          this.arrowsGroup.remove(...this.arrowsGroup.children.filter(o => o.type === 'Mesh'));\n        }\n\n        this.markers?.clearMarkers();\n        this.compass?.clearHotspots();\n\n        return Promise.all([\n          this.psv.setPanorama(node.panorama, {\n            transition      : this.config.transition,\n            caption         : node.caption,\n            description     : node.description,\n            panoData        : node.panoData,\n            sphereCorrection: node.sphereCorrection,\n          })\n            .then((completed) => {\n              if (!completed) {\n                throw utils.getAbortError();\n              }\n            }),\n          this.datasource.loadLinkedNodes(nodeId),\n        ]);\n      })\n      .then(() => {\n        if (this.prop.loadingNode !== nodeId) {\n          throw utils.getAbortError();\n        }\n\n        const node = this.prop.currentNode;\n\n        if (node.markers) {\n          if (this.markers) {\n            this.markers.setMarkers(node.markers);\n          }\n          else {\n            utils.logWarn(`Node ${node.id} markers ignored because the plugin is not loaded.`);\n          }\n        }\n\n        this.__renderLinks(node);\n        this.__preload(node);\n\n        /**\n         * @event node-changed\n         * @memberof PSV.plugins.VirtualTourPlugin\n         * @summary Triggered when the current node is changed\n         * @param {string} nodeId\n         * @param {PSV.plugins.VirtualTourPlugin.NodeChangedData} data\n         */\n        this.trigger(EVENTS.NODE_CHANGED, nodeId, {\n          fromNode,\n          fromLink,\n          fromLinkPosition,\n        });\n\n        this.prop.loadingNode = null;\n\n        return true;\n      })\n      .catch((err) => {\n        if (utils.isAbortError(err)) {\n          return false;\n        }\n\n        this.psv.showError(this.psv.config.lang.loadError);\n\n        this.psv.loader.hide();\n        this.psv.navbar.setCaption('');\n\n        this.prop.loadingNode = null;\n\n        throw err;\n      });\n  }\n\n  /**\n   * @summary Adds the links for the node\n   * @param {PSV.plugins.VirtualTourPlugin.Node} node\n   * @private\n   */\n  __renderLinks(node) {\n    const positions = [];\n\n    node.links.forEach((link) => {\n      const position = this.__getLinkPosition(node, link);\n      positions.push(position);\n\n      if (this.is3D()) {\n        const mesh = new THREE.Mesh(ARROW_GEOM, new THREE.MeshLambertMaterial());\n        mesh.userData = { [LINK_DATA]: link, longitude: position.longitude };\n        mesh.rotation.order = 'YXZ';\n        mesh.rotateY(-position.longitude);\n        this.psv.dataHelper\n          .sphericalCoordsToVector3({ longitude: position.longitude, latitude: 0 }, mesh.position)\n          .multiplyScalar(1 / CONSTANTS.SPHERE_RADIUS);\n\n        const outlineMesh = new THREE.Mesh(ARROW_OUTLINE_GEOM, new THREE.MeshBasicMaterial({ side: THREE.BackSide }));\n        outlineMesh.position.copy(mesh.position);\n        outlineMesh.rotation.copy(mesh.rotation);\n\n        setMeshColor(mesh, link.arrowStyle?.color || this.config.arrowStyle.color);\n        setMeshColor(outlineMesh, link.arrowStyle?.outlineColor || this.config.arrowStyle.outlineColor);\n\n        this.arrowsGroup.add(mesh);\n        this.arrowsGroup.add(outlineMesh);\n      }\n      else {\n        if (this.isGps()) {\n          position.latitude += this.config.markerLatOffset;\n        }\n\n        this.markers.addMarker({\n          ...this.config.markerStyle,\n          ...link.markerStyle,\n          id      : `tour-link-${link.nodeId}`,\n          tooltip : link.name,\n          hideList: true,\n          data    : { [LINK_DATA]: link },\n          ...position,\n        }, false);\n      }\n    });\n\n    if (this.is3D()) {\n      this.__positionArrows();\n    }\n    else {\n      this.markers.renderMarkers();\n    }\n\n    if (this.config.linksOnCompass && this.compass) {\n      this.compass.setHotspots(positions);\n    }\n  }\n\n  /**\n   * @summary Computes the marker position for a link\n   * @param {PSV.plugins.VirtualTourPlugin.Node} node\n   * @param {PSV.plugins.VirtualTourPlugin.NodeLink} link\n   * @return {PSV.Position}\n   * @private\n   */\n  __getLinkPosition(node, link) {\n    if (this.isGps()) {\n      const p1 = [THREE.Math.degToRad(node.position[0]), THREE.Math.degToRad(node.position[1])];\n      const p2 = [THREE.Math.degToRad(link.position[0]), THREE.Math.degToRad(link.position[1])];\n      const h1 = node.position[2] !== undefined ? node.position[2] : link.position[2] || 0;\n      const h2 = link.position[2] !== undefined ? link.position[2] : node.position[2] || 0;\n\n      let latitude = 0;\n      if (h1 !== h2) {\n        latitude = Math.atan((h2 - h1) / distance(p1, p2));\n      }\n\n      const longitude = bearing(p1, p2);\n\n      return { longitude, latitude };\n    }\n    else {\n      return this.psv.dataHelper.cleanPosition(link);\n    }\n  }\n\n  /**\n   * @private\n   */\n  __onEnterObject(mesh, viewerPoint) {\n    const link = mesh.userData[LINK_DATA];\n\n    setMeshColor(mesh, link.arrowStyle?.hoverColor || this.config.arrowStyle.hoverColor);\n\n    if (link.name) {\n      this.prop.currentTooltip = this.psv.tooltip.create({\n        left   : viewerPoint.x,\n        top    : viewerPoint.y,\n        content: link.name,\n      });\n    }\n\n    this.psv.needsUpdate();\n  }\n\n\n  /**\n   * @private\n   */\n  __onHoverObject(mesh, viewerPoint) {\n    if (this.prop.currentTooltip) {\n      this.prop.currentTooltip.move({\n        left: viewerPoint.x,\n        top : viewerPoint.y,\n      });\n    }\n  }\n\n\n  /**\n   * @private\n   */\n  __onLeaveObject(mesh) {\n    const link = mesh.userData[LINK_DATA];\n\n    setMeshColor(mesh, link.arrowStyle?.color || this.config.arrowStyle.color);\n\n    if (this.prop.currentTooltip) {\n      this.prop.currentTooltip.hide();\n      this.prop.currentTooltip = null;\n    }\n\n    this.psv.needsUpdate();\n  }\n\n  /**\n   * @summary Updates to position of the group of arrows\n   * @private\n   */\n  __positionArrows() {\n    this.arrowsGroup.position.copy(this.psv.prop.direction).multiplyScalar(0.5);\n    const s = this.config.arrowStyle.scale;\n    const f = s[1] + (s[0] - s[1]) * (this.psv.getZoomLevel() / 100);\n    const y = 2.5 - (this.psv.getZoomLevel() / 100) * 1.5;\n    this.arrowsGroup.position.y += this.config.arrowPosition === 'bottom' ? -y : y;\n    this.arrowsGroup.scale.set(f, f, f);\n  }\n\n  /**\n   * @summary Manage the preload of the linked panoramas\n   * @param {PSV.plugins.VirtualTourPlugin.Node} node\n   * @private\n   */\n  __preload(node) {\n    if (!this.config.preload) {\n      return;\n    }\n\n    this.preload[node.id] = true;\n\n    this.prop.currentNode.links\n      .filter(link => !this.preload[link.nodeId])\n      .filter((link) => {\n        if (typeof this.config.preload === 'function') {\n          return this.config.preload(this.prop.currentNode, link);\n        }\n        else {\n          return true;\n        }\n      })\n      .forEach((link) => {\n        this.preload[link.nodeId] = this.datasource.loadNode(link.nodeId)\n          .then((linkNode) => {\n            return this.psv.textureLoader.preloadPanorama(linkNode.panorama);\n          })\n          .then(() => {\n            this.preload[link.nodeId] = true;\n          })\n          .catch(() => {\n            delete this.preload[link.nodeId];\n          });\n      });\n  }\n\n  /**\n   * @summary Toggles the visibility of the list of nodes\n   */\n  toggleNodesList() {\n    if (this.psv.panel.prop.contentId === ID_PANEL_NODES_LIST) {\n      this.hideNodesList();\n    }\n    else {\n      this.showNodesList();\n    }\n  }\n\n  /**\n   * @summary Opens side panel with the list of nodes\n   */\n  showNodesList() {\n    const nodes = this.change(EVENTS.RENDER_NODES_LIST, Object.values(this.datasource.nodes));\n\n    this.psv.panel.show({\n      id          : ID_PANEL_NODES_LIST,\n      content     : NODES_LIST_TEMPLATE(\n        nodes,\n        this.psv.config.lang[NodesListButton.id],\n        this.prop.currentNode?.id\n      ),\n      noMargin    : true,\n      clickHandler: (e) => {\n        const li = e.target ? utils.getClosest(e.target, 'li') : undefined;\n        const nodeId = li ? li.dataset.nodeId : undefined;\n\n        if (nodeId) {\n          this.setCurrentNode(nodeId);\n          this.hideNodesList();\n        }\n      },\n    });\n  }\n\n  /**\n   * @summary Closes side panel if it contains the list of nodes\n   */\n  hideNodesList() {\n    this.psv.panel.hide(ID_PANEL_NODES_LIST);\n  }\n\n}\n"],"names":["AbstractDatasource","plugin","nodes","destroy","loadNode","nodeId","PSVError","loadLinkedNodes","checkNode","node","isGps","id","panorama","position","length","checkLink","link","utils","isExtendedPosition","setMeshColor","mesh","color","material","set","distance","p1","p2","greatArcDistance","bearing","λ1","φ1","λ2","φ2","y","Math","sin","cos","x","atan2","ClientSideDatasource","Promise","resolve","reject","setNodes","rawNodes","linkedNodes","forEach","links","logWarn","name","MODE_CLIENT","MODE_SERVER","MODE_MANUAL","MODE_GPS","MODE_MARKERS","MODE_3D","EVENTS","NODE_CHANGED","RENDER_NODES_LIST","LINK_DATA","DEFAULT_MARKER","html","arrowIconSvg","width","height","scale","anchor","className","style","DEFAULT_ARROW","hoverColor","outlineColor","loader","THREE","ObjectLoader","geometries","parseGeometries","arrowGeometryJson","arrowOutlineGeometryJson","arrow","uuid","arrowOutline","rot","PI","rotateX","ARROW_GEOM","ARROW_OUTLINE_GEOM","ID_PANEL_NODES_LIST","NODES_LIST_TEMPLATE","title","currentNodeId","nodesList","map","thumbnail","caption","join","NodesListButton","navbar","psv","getPlugin","on","CONSTANTS","OPEN_PANEL","CLOSE_PANEL","off","isSupported","isServerSide","handleEvent","e","type","toggleActive","args","onClick","toggleNodesList","AbstractButton","icon","ServerSideDatasource","config","getNode","nodeResolver","linksResolver","getLinks","then","DEFAULTS","lang","registerButton","VirtualTourPlugin","options","prop","currentNode","currentTooltip","loadingNode","stopObserver","preload","dataMode","positionMode","renderMode","rotateSpeed","transition","DEFAULT_TRANSITION","markerLatOffset","arrowPosition","linksOnCompass","markerStyle","arrowStyle","listButton","markers","compass","datasource","arrowsGroup","is3D","Group","localLight","PointLight","add","init","once","READY","__positionArrows","renderer","scene","ambientLight","AmbientLight","needsUpdate","POSITION_UPDATED","ZOOM_UPDATED","CLICK","observeObjects","startNodeId","setCurrentNode","remove","data","objects","find","o","userData","OBJECT_EVENTS","ENTER_OBJECT","__onEnterObject","detail","object","viewerPoint","HOVER_OBJECT","__onHoverObject","LEAVE_OBJECT","__onLeaveObject","fromLink","hideError","fromNode","fromLinkPosition","__getLinkPosition","all","getAbortError","speed","animate","show","hide","children","filter","clearMarkers","clearHotspots","setPanorama","description","panoData","sphereCorrection","completed","setMarkers","__renderLinks","__preload","trigger","catch","err","isAbortError","showError","loadError","setCaption","positions","push","Mesh","MeshLambertMaterial","longitude","rotation","order","rotateY","dataHelper","sphericalCoordsToVector3","latitude","multiplyScalar","SPHERE_RADIUS","outlineMesh","MeshBasicMaterial","side","BackSide","copy","addMarker","tooltip","hideList","renderMarkers","setHotspots","degToRad","h1","undefined","h2","atan","cleanPosition","create","left","top","content","move","direction","s","f","getZoomLevel","linkNode","textureLoader","preloadPanorama","panel","contentId","hideNodesList","showNodesList","change","Object","values","noMargin","clickHandler","li","target","getClosest","dataset","AbstractPlugin"],"mappings":"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MAAuB,CAACM,IAAI,CAACH,QAAjC,EAA2C;EACzC,kBAAM,IAAIP,0BAAJ,wCAAkDU,IAAI,CAACX,MAAvD,iBAAyEI,IAAI,CAACE,EAA9E,CAAN;EACD;EACF,SAZD,EAHe;;EAkBfF,QAAAA,IAAI,CAACsC,KAAL,GAAaA,KAAb;EACD,OArBI,CAAP;EAsBD;EACF,GAjEH;;EAAA;EAAA,EAA0C/C,kBAA1C;;ECiBA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;AACA2H,4BAAQ,CAACC,IAAT,CAAc5B,eAAe,CAACrF,EAA9B,IAAoC,WAApC;AACAkH,kCAAc,CAAC7B,eAAD,EAAkB,cAAlB,CAAd;EAMA;EACA;EACA;EACA;EACA;;MACa8B,iBAAb;EAAA;;EAYE;EACF;EACA;EACA;EACE,6BAAY5B,GAAZ,EAAiB6B,OAAjB,EAA0B;EAAA;;EACxB,uCAAM7B,GAAN;EAEA;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;;EACI,UAAK8B,IAAL,GAAY;EACVC,MAAAA,WAAW,EAAK,IADN;EAEVC,MAAAA,cAAc,EAAE,IAFN;EAGVC,MAAAA,WAAW,EAAK,IAHN;EAIVC,MAAAA,YAAY,EAAI;EAJN,KAAZ;EAOA;EACJ;EACA;EACA;;EACI,UAAKC,OAAL,GAAe,EAAf;EAEA;EACJ;EACA;EACA;;EACI,UAAKhB,MAAL;EACEiB,MAAAA,QAAQ,EAASpF,WADnB;EAEEqF,MAAAA,YAAY,EAAKnF,WA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"}