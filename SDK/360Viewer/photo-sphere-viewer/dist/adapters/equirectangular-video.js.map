{"version":3,"file":"equirectangular-video.js","sources":["../../src/adapters/shared/AbstractVideoAdapter.js","../../src/adapters/equirectangular-video/index.js"],"sourcesContent":["import * as THREE from 'three';\nimport { AbstractAdapter, CONSTANTS, PSVError } from '../..';\n\n/**\n * @typedef {Object} PSV.adapters.AbstractVideoAdapter.Video\n * @summary Object defining a video\n * @property {string} source\n */\n\n/**\n * @typedef {Object} PSV.adapters.AbstractVideoAdapter.Options\n * @property {boolean} [autoplay=false] - automatically start the video\n * @property {boolean} [muted=autoplay] - initially mute the video\n */\n\n/**\n * @summary Base video adapters class\n * @memberof PSV.adapters\n * @abstract\n * @private\n */\nexport class AbstractVideoAdapter extends AbstractAdapter {\n\n  static supportsTransition = false;\n  static supportsPreload = false;\n  static supportsDownload = false;\n\n  constructor(psv, options) {\n    super(psv);\n\n    /**\n     * @member {PSV.adapters.AbstractVideoAdapter.Options}\n     * @private\n     */\n    this.config = {\n      autoplay: false,\n      muted   : options?.autoplay ?? false,\n      ...options,\n    };\n\n    /**\n     * @member {HTMLVideoElement}\n     * @private\n     */\n    this.video = null;\n\n    this.psv.on(CONSTANTS.EVENTS.BEFORE_RENDER, this);\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    this.psv.off(CONSTANTS.EVENTS.BEFORE_RENDER, this);\n\n    this.__removeVideo();\n\n    super.destroy();\n  }\n\n  /**\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      case CONSTANTS.EVENTS.BEFORE_RENDER:\n        if (this.video) {\n          this.psv.needsUpdate();\n        }\n        break;\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @override\n   * @param {PSV.adapters.AbstractVideoAdapter.Video} panorama\n   * @returns {Promise.<PSV.TextureData>}\n   */\n  loadTexture(panorama) {\n    if (typeof panorama !== 'object' || !panorama.source) {\n      return Promise.reject(new PSVError('Invalid panorama configuration, are you using the right adapter?'));\n    }\n\n    if (!this.psv.getPlugin('video')) {\n      return Promise.reject(new PSVError('Video adapters require VideoPlugin to be loaded too.'));\n    }\n\n    const video = this.__createVideo(panorama.source);\n\n    return this.__videoLoadPromise(video)\n      .then(() => {\n        const texture = new THREE.VideoTexture(video);\n        return { panorama, texture };\n      });\n  }\n\n  /**\n   * @override\n   */\n  __switchVideo(texture) {\n    let currentTime;\n    let duration;\n    let paused = !this.config.autoplay;\n    let muted = this.config.muted;\n    let volume = 1;\n    if (this.video) {\n      ({ currentTime, duration, paused, muted, volume } = this.video);\n    }\n\n    this.__removeVideo();\n    this.video = texture.image;\n\n    // keep current time when switching resolution\n    if (this.video.duration === duration) {\n      this.video.currentTime = currentTime;\n    }\n\n    // keep volume\n    this.video.muted = muted;\n    this.video.volume = volume;\n\n    // play\n    if (!paused) {\n      this.video.play();\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeTexture(textureData) {\n    if (textureData.texture) {\n      const video = textureData.texture.image;\n      video.pause();\n      this.psv.container.removeChild(video);\n    }\n    textureData.texture?.dispose();\n  }\n\n  /**\n   * @summary Removes the current video element\n   * @private\n   */\n  __removeVideo() {\n    if (this.video) {\n      this.video.pause();\n      this.psv.container.removeChild(this.video);\n      delete this.video;\n    }\n  }\n\n  /**\n   * @summary Creates a new video element\n   * @memberOf PSV.adapters\n   * @param {string} src\n   * @return {HTMLVideoElement}\n   * @private\n   */\n  __createVideo(src) {\n    const video = document.createElement('video');\n    video.crossOrigin = this.psv.config.withCredentials ? 'use-credentials' : 'anonymous';\n    video.loop = true;\n    video.playsinline = true;\n    video.style.display = 'none';\n    video.muted = this.config.muted;\n    video.src = src;\n    video.preload = 'metadata';\n\n    this.psv.container.appendChild(video);\n\n    return video;\n  }\n\n  /**\n   * @private\n   */\n  __videoLoadPromise(video) {\n    const self = this;\n\n    return new Promise((resolve, reject) => {\n      video.addEventListener('loadedmetadata', function onLoaded() {\n        if (this.video && video.duration === this.video.duration) {\n          resolve(self.__videoBufferPromise(video, this.video.currentTime));\n        }\n        else {\n          resolve();\n        }\n        video.removeEventListener('loadedmetadata', onLoaded);\n      });\n\n      video.addEventListener('error', function onError(err) {\n        reject(err);\n        video.removeEventListener('error', onError);\n      });\n    });\n  }\n\n  /**\n   * @private\n   */\n  __videoBufferPromise(video, currentTime) {\n    return new Promise((resolve) => {\n      function onBuffer() {\n        const buffer = video.buffered;\n        for (let i = 0, l = buffer.length; i < l; i++) {\n          if (buffer.start(i) <= video.currentTime && buffer.end(i) >= video.currentTime) {\n            video.pause();\n            video.removeEventListener('buffer', onBuffer);\n            video.removeEventListener('progress', onBuffer);\n            resolve();\n            break;\n          }\n        }\n      }\n\n      // try to reduce the switching time by preloading in advance\n      // FIXME find a better way ?\n      video.currentTime = Math.min(currentTime + 2000, video.duration.currentTime);\n      video.muted = true;\n\n      video.addEventListener('buffer', onBuffer);\n      video.addEventListener('progress', onBuffer);\n\n      video.play();\n    });\n  }\n\n}\n","import * as THREE from 'three';\nimport { CONSTANTS, PSVError, utils } from '../..';\nimport { AbstractVideoAdapter } from '../shared/AbstractVideoAdapter';\n\n/**\n * @typedef {Object} PSV.adapters.EquirectangularVideoAdapter.Video\n * @summary Object defining a video\n * @property {string} source\n */\n\n/**\n * @typedef {Object} PSV.adapters.EquirectangularVideoAdapter.Options\n * @property {boolean} [autoplay=false] - automatically start the video\n * @property {boolean} [muted=autoplay] - initially mute the video\n * @property {number} [resolution=64] - number of faces of the sphere geometry, higher values may decrease performances\n */\n\n\n/**\n * @summary Adapter for equirectangular videos\n * @memberof PSV.adapters\n * @extends PSV.adapters.AbstractAdapter\n */\nexport class EquirectangularVideoAdapter extends AbstractVideoAdapter {\n\n  static id = 'equirectangular-video';\n\n  /**\n   * @param {PSV.Viewer} psv\n   * @param {PSV.adapters.EquirectangularVideoAdapter.Options} options\n   */\n  constructor(psv, options) {\n    super(psv, {\n      resolution: 64,\n      ...options,\n    });\n\n    if (!utils.isPowerOfTwo(this.config.resolution)) {\n      throw new PSVError('EquirectangularVideoAdapter resolution must be power of two');\n    }\n\n    this.SPHERE_SEGMENTS = this.config.resolution;\n    this.SPHERE_HORIZONTAL_SEGMENTS = this.SPHERE_SEGMENTS / 2;\n  }\n\n  /**\n   * @override\n   * @param {PSV.adapters.EquirectangularVideoAdapter.Video} panorama\n   * @returns {Promise.<PSV.TextureData>}\n   */\n  loadTexture(panorama) {\n    return super.loadTexture(panorama)\n      .then(({ texture }) => {\n        const panoData = {\n          fullWidth    : texture.image.width,\n          fullHeight   : texture.image.height,\n          croppedWidth : texture.image.width,\n          croppedHeight: texture.image.height,\n          croppedX     : 0,\n          croppedY     : 0,\n          poseHeading  : 0,\n          posePitch    : 0,\n          poseRoll     : 0,\n        };\n\n        return { panorama, texture, panoData };\n      });\n  }\n\n  /**\n   * @override\n   */\n  createMesh(scale = 1) {\n    const geometry = new THREE.SphereGeometry(\n      CONSTANTS.SPHERE_RADIUS * scale,\n      this.SPHERE_SEGMENTS,\n      this.SPHERE_HORIZONTAL_SEGMENTS,\n      -Math.PI / 2\n    )\n      .scale(-1, 1, 1);\n\n    const material = new THREE.MeshBasicMaterial();\n\n    return new THREE.Mesh(geometry, material);\n  }\n\n  /**\n   * @override\n   */\n  setTexture(mesh, textureData) {\n    mesh.material.map?.dispose();\n    mesh.material.map = textureData.texture;\n\n    this.__switchVideo(textureData.texture);\n  }\n\n}\n"],"names":["AbstractVideoAdapter","psv","options","config","autoplay","muted","video","on","CONSTANTS","EVENTS","BEFORE_RENDER","destroy","off","__removeVideo","handleEvent","e","type","needsUpdate","loadTexture","panorama","source","Promise","reject","PSVError","getPlugin","__createVideo","__videoLoadPromise","then","texture","THREE","VideoTexture","__switchVideo","currentTime","duration","paused","volume","image","play","disposeTexture","textureData","pause","container","removeChild","dispose","src","document","createElement","crossOrigin","withCredentials","loop","playsinline","style","display","preload","appendChild","self","resolve","addEventListener","onLoaded","__videoBufferPromise","removeEventListener","onError","err","onBuffer","buffer","buffered","i","l","length","start","end","Math","min","AbstractAdapter","supportsTransition","supportsPreload","supportsDownload","EquirectangularVideoAdapter","resolution","utils","isPowerOfTwo","SPHERE_SEGMENTS","SPHERE_HORIZONTAL_SEGMENTS","panoData","fullWidth","width","fullHeight","height","croppedWidth","croppedHeight","croppedX","croppedY","poseHeading","posePitch","poseRoll","createMesh","scale","geometry","SphereGeometry","SPHERE_RADIUS","PI","material","MeshBasicMaterial","Mesh","setTexture","mesh","map","id"],"mappings":"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"}